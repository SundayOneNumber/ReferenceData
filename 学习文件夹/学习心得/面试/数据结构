
数据结构在计算机内存中的存储包括数据元素的存储和元素之间的关系的表示。

元素之间的关系在计算机中有两种不同的表示方法：顺序表示和非顺序表示。由此得出两种不同的存储结构：顺序存储结构和链式存储结构。

在C语言中，用一维数组表示顺序存储结构，用结构体类型表示链式存储结构。

数据结构的三个组成部分：
逻辑结构：数据元素之间逻辑关系的描述D_S = (D,S)
存储结构：数据元素在计算机中的存储及其逻辑关系的表现称为数据的存储结构或物理结构
数据操作：对数据要进行的运算。

逻辑结构：
线性表-------》顺序存储结构、链式存储结构
树    -------》顺序存储结构、链式存储结构
图    -------》复合存储结构

数据结构的主要运算包括:建立、消除、删除、插入、访问、修改、排序、查找

抽象数据类型（Abstract Data Type,简称ADT）：是一个数据模型以及定义在该模型上的一组操作。
ADT的形式化定义是三元组：ADT=(D,S,P)其中：D是数据对象，S是D上的关系集，P是对D的基本操作集。

算法具有以下五个特性：
有穷性、确定性、可行性、输入、输出

算法和程序是两个不同的概念:一个计算机程序是对一个算法使用某种程序设计语言的具体实现

算法有以下几个标准：
正确性、可读性、健壮性、通用性、效率与存储量需求

算法效率的度量：
算法执行时间需通过依据该算法编制的程序在计算机上运行所消耗的时间来度量。
其方法有两种：
事后统计：据算计内部进行执行时间和实际占有空间的统计
事前分析：求出该算法的而一个时间界限函数。
        与此相关的因素有：
        - 依据算法选用何种策略
        - 问题的规模
        - 程序设计的语言
        - 编译程序所产生的机器代码的质量
        - 机器执行指令的速度
时间复杂度、语句频度
空间复杂度

----------------------------线性表--------------------------

线性表的顺序存储----
顺序存储的线性表的特点：
    线性表的逻辑顺序与物理顺序一致
    数据元素之间的关系是以元素在计算机内“物理位置相邻”来体现。

线性表的链式存储----
特殊的：循环链表、双向链表、


---------------------------栈和队列-----------------------------
栈和队列都来自线性表数据结构，都是“操作受限”的线性表。
栈的顺序存储结构简称为顺序栈，和线性表相类似，用一维数组来存储栈

栈：是限制在表的一段进行插入和删除操作的线性表。先进后出线性表
栈顶、栈底、空栈
静态顺序栈
动态顺序栈

栈的链式表示：
栈的链式存储结构称为链栈，是运算受限的单链表。其插入和删除操作只能在表头位置进行。
-----------------栈与递归-------
递归调用：一个函数（或过程）直接或间接地调用自己本身，简称递归。递归是程序设计中的一个强有力的工具。因为递归函数结构清晰，程序易读，正确性很容易得到证明。
每一层递归包含的信息如：参数、局部变量、上一层的返回地址构成一个“工作记录” 。每进入一层递归，就产生一个新的工作记录压入栈顶；每退出一层递归，就从栈顶弹出一个工作记录。

---------------队列
队列：也是运算受限的线性表。是一种先进先出的线性表。只允许在表的一端进行插入，而在另一端进行删除。
队首：允许进行删除的一端称为队首。
队尾：允许进行插入的一端称为队尾。
循环队列

队列存储类型也分为：链式与顺序存储

---------------------------------数组--------------------------------
数组一般不做插入和删除操作。一般都是采用顺序存储的方法来表示数组
通常有两种顺序存储方式：
行优先顺序
列优先顺序

--------------------------树和二叉树-------------------------
树的表示形式：
(1)倒挂树
(2)嵌套集合
(3)广义表形式
(4)凹入法表示形式

二叉树的存储结构：
1.顺序存储结构
  用一组地址连续的存储单位依次“自上而下、自左而右”存储完全二叉树的数据元素。
  对于一般的二叉树，将其每个结点与完全二叉树上的结点相对照，存储在一维数组中。最坏的情况是：一个深度为K且只有K个结点的单支树需要长度为2K-1的一维数组
2.链式存储结构
  设计不同的结点结构可构成不同的链式存储结构。
  (1)二叉链表结点。有三个域：一个数据域，两个分别指向左右子节点的指针域。
  (2)三叉链表结点。除了二叉链表的三个域外，再增加一个指针域，用来指向结点的父节点。

结点开始，按“自上而下、自左至右”的原则进行。

二叉树的遍历：
遍历二叉树：是指按指定的规律对二叉树中的每个结点访问一次且仅访问一次。
先序遍历二叉树（先根结点，然后左子树，最后右子树）
中序遍历二叉树（先左子树，然后根节点，最后右子树）
后序遍历二叉树（先左子树，然后右子树，最后根节点）
层次遍历二叉树（从根节点开始遍历，按层次次序“自上而下，从左至右”）访问树中的各结点。(层次遍历非递归算法)

遍历二叉树的算法：一般分为两种：（递归算法和非递归算法）



