
gcc main.c 预编译
gcc -o main.i main.c -E生成预处理文件
./a.out    执行程序

c语言，宏定义会在预处理的时候进行宏替换，此外，预处理的时候不会进行运算操作，

另外，预处理的时候会把include引入的文件，进行头文件展开

宏函数的优点ˊ_>ˋ……不必考虑c语法，把参数当作字符串来处理

Typedef 与define 区别
前者的遵循c语言语法，结尾后需加分号
前者地运用域跟c语言里参数的作用域一至，后者的作用域是从申明开始往后都可以使用
前者在预编译的时候不会像后者宏定义一样被替换，而是仍然保留


结构体，申明的时候，系统不会为其分配内存，结构体内存分配运作偏移量规则。

数组，系统分配的内存，是一段连续的空间。链表的内存不确定，可能不是一段连续的，因为链表的出现是为了给该数据类型暂时分配分配内存，以后可能接着扩大。结构体的内存是连续的一块内存。联合体的内存是以最大内存的一个变量为准，且同一时间只能存储一个变量。

动态数据结构～静态链表


动态数据结构～动态链表


静态变量、常量、全局变量，都是存储在数据存储区


系统内核——》栈———》堆———》数据区———》代码区、

除了栈，地址都是从下往上增大的
而栈，地址是从上往下增大的

1、栈区（stack）— 由编译器自动分配释放 ，存放函数的参数值，局部变量的值等。其操作方式类似于数据结构中的栈。
2、堆区（heap） — 一般由程序员分配释放—new或者malloc， 若程序员不释放，程序结束时可能由OS回收 。注意它与数据结构中的堆是两回事，分配方式倒是类似于链表。
3、全局区（静态区）（static）— 全局变量和静态变量的存储是放在一块的，初始化的全局变量和静态变量在一块区域， 未初始化的全局变量和未初始化的静态变量在相邻的另一块区域。程序结束后由系统释放。
4、文字常量区 — 常量字符串就是放在这里的，程序结束后由系统释放 。
5、程序代码区 — 存放函数体的二进制代码。

堆中放的是指针 栈中放的是数据

C语言定义常量常用的方法有以下2种：
第一种：宏定义
#define N 3  // 定义了一个常量为3的宏N，在程序中N就代表3
第二种：给变量初始化赋值
const int a = 2;  // 定义了一个int型变量，并赋值为2，其实这是用变量来定义常量
注：定义常量还是用宏定义的比较多。
